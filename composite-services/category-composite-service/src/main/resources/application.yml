spring:
  application:
    name: category-composite-service
  kafka:
    bootstrap-servers: ${KAFKA_BOOTSTRAP_SERVERS}
    topic:
      replication-factor: ${KAFKA_REPLICATION_FACTOR}
      num-partitions: ${KAFKA_NUM_PARTITIONS}
    producer:
      acks: all
      retries: 100
      key-serializer: org.apache.kafka.common.serialization.LongSerializer
      value-serializer: org.apache.kafka.common.serialization.StringSerializer
      properties:
        schema.registry.url: ${SCHEMA_REGISTRY_URL}
        specific.avro.reader: true
      template:
        default-topic: test
    consumer:
      enable-auto-commit: false
      auto-offset-reset: earliest
      group-id: ${KAFKA_GROUP_ID}
      key-deserializer: org.apache.kafka.common.serialization.LongSerializer
      value-deserializer: org.apache.kafka.common.serialization.StringSerializer
      properties:
        schema.registry.url: ${SCHEMA_REGISTRY_URL}
        specific.avro.reader: true
      max-poll-records: 1000
      fetch-min-size: 1MB
      fetch-max-wait: 5000
  jackson:
    serialization:
      write-dates-as-timestamps: false
server:
  port: 8090

# Root logger option
log4j:
  rootLogger: DEBUG, stdout, file
